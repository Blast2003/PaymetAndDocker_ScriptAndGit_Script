DockerFile:

FROM node:23-alpine AS builder

WORKDIR /app

COPY package*.json ./

RUN npm install

COPY . .

// EXPOSE 5173 => optional: expose for all container inside to let them know 

CMD ["npm", "start"]



// Frontend

+ List images: 
	docker images

+ build images: 
	docker build -t paypal_payment .

+ remover image (tag lastest): 
	docker rmi paypal_payment

+ run image to create container:
	docker run -p 5173 paypal_payment (random host)

	// have option -p = expose + publish = publish to world and for container inside this container
	
	docker run -p 5173:5173 paypal_payment (specific host)  




// Docker Hub:
  + Push images
      Step 1: tag => docker tag paypal_payment blast11/paypal_payment (tag lastest as default)

      Step 2: push => docker push blast11/paypal_payment




 + Pull images from Docker Hub:
	    docker pull blast11/paypal_payment	
      docker pull blast11/mongo	




  + Run multiple image after pulling images from Docker Hub
      Step 1: Go to new directory

      Step 2: Create docker-compose.yml file:
              version: "3.8"

              services:
                app:
                  image: blast11/name:app
                  ports:
                    - "3002:3002"
                  env_file: .env
                  depends_on:
                    - mongo

                mongo:
                  image: blast11/name:mongo
                  restart: always
                  ports:
                    - "27017:27017"

      Step 3: If have .evn => must to create .env clone from the main project

      Step 4: docker-compose up -d





// Backend include: server + database

+ Need to create "docker-compose.yml" => run multiple images in one container => create network and after that create e-checking + database

version: "3.8"

services:
  app:
    build: .
    ports:
      - "3002:3002"
    env_file: .env
    depends_on:
      - mongo

  mongo:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"


+ Run compose 
	docker-compose up --build

+ Change in .evn: (because we use mongo compass from local not use on cloud), if use on cloud => don't need to create "docker-compose.yml"
	change from MONGO_DB= mongodb://"localhost":27017/E-Checking to MONGO_DB=mongodb://"mongo":27017/E-Checking 



// Production




// Use docker compose to pull and update images

Note: Only run when terminal locate in directory contain docker-compose.yml

+ Pull all images: docker compose pull

+ Update and run images with the latest version: docker compose up -d


+ Run multiple images  (-d = run in detach mode)
	docker-compose up -d 


+ Verify containers are running: (one container are running contain one image and having one largest container contain all of small container )
	docker-compose ps













